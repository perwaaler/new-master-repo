function new_state = take_step(S, desired_speed, desired_angle, max_delta)
% Takes a step given current state and desired state.
% position A0, speed, direction (angle0),

% discrepency between desired and current angle:
des_delta_theta = desired_angle - S.theta;
des_delta2_theta = des_delta_theta - S.dtheta;

% ensure maximum change is not violated
delta2_theta = cap(des_delta2_theta, max_delta.d2theta);
delta_theta = S.dtheta + delta2_theta;
% ensure maximum change is not violated
delta_theta = cap(delta_theta, max_delta.dtheta);

% compute new theta
theta = S.theta + delta_theta;

speed_diff = desired_speed - S.speed;



% compute new angle and speed, and take next step
% theta1 = S.theta + sign(des_delta_theta)*min(max_delta.theta, abs(des_delta_theta));
speed1 = S.speed + sign(speed_diff)*min(max_delta.dspeed, abs(speed_diff));
A1 = S.pos + speed1*exp(1i*theta);
% dtheta1 = theta1 - S.theta;

[S.pos, S.theta, S.speed, S.dtheta] = deal(A1,theta,speed1,delta_theta);

new_state = S;
end