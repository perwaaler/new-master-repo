function plot_pos(S, plots, col, time_diff, decision) 
% plots position of each disc based on their positions in state S.

% unpack variables
A = S(1).pos;
B = S(2).pos;
reactA = S(1).EA;
reactB = S(2).EA;
r = S(1).RUprop.r;
init_x = plots.xinit;

% Tadv = -1*-1^time_diff.RU1*time_diff.Tadv;

if nargin == 2
    col = ["red", "blue"];
    title_str = sprintf("reactA = %d, reactB = %d", reactA, reactB);
    
elseif nargin == 3
    title_str = sprintf("reactA = %d, reactB = %d", reactA, reactB);
    
elseif nargin == 5
    title_str = sprintf("reactA = %d, reactB = %d, Tadv=%d, TTPC=%d", ...
        reactA, reactB, time_diff.Tadv, time_diff.TTPC);
    
elseif nargin == 6
    title_str = sprintf("reactA = %d, reactB = %d, TTPC=%.1f, Tadv=%.1f, decision=%s", ...
        reactA, reactB, time_diff.TTPC, time_diff.Tadv, dec2str(decision));
end

xlimit = [-init_x, init_x];
ylimit = [-5,5];

if plots.enc == 1
    
    xlim(xlimit)
    ylim(ylimit)

    plot(r*exp(1i*linspace(0,2*pi,50)) + A, 'color', col(1))
    
    title(title_str)
    hold on 

    plot(r*exp(1i*linspace(0,2*pi,50)) + B,'color', col(2))

    xlim(xlimit)
    ylim(ylimit)
    hold off
    pause(plots.pause)
    
    if norm(A - B) < 2*r
        hold on; title("collision"); hold off
    end
end
end